// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Room.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Room.proto</summary>
public static partial class RoomReflection {

  #region Descriptor
  /// <summary>File descriptor for Room.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static RoomReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgpSb29tLnByb3RvGgpVc2VyLnByb3RvGgpDYXJkLnByb3RvItMCCgRSb29t",
          "Eg8KB3Jvb21faWQYASABKAUSGAoHcGxheWVycxgCIAMoCzIHLlBsYXllchIe",
          "Cgpyb29tX3N0YXRlGAMgASgOMgouUm9vbVN0YXRlEhgKCWNhcmRfbGlzdBgE",
          "IAMoCzIFLkNhcmQSGQoKaG9sZV9jYXJkcxgFIAMoCzIFLkNhcmQSEAoIY2Fs",
          "bF9wb3MYBiABKAUSEgoKY2FsbF90aW1lcxgHIAEoBRISCgpiYXNlX3Njb3Jl",
          "GAggASgFEhAKCG11bHRpcGxlGAkgASgFEhIKCmdyYWJfdGltZXMYCiABKAUS",
          "FAoMY3VyX2xvcmRfcG9zGAsgASgFEhMKC3JhaXNlX3RpbWVzGAwgASgFEhAK",
          "CHBlbmRfcG9zGA0gASgFEhMKC21vbnN0ZXJfcG9zGA4gASgFEhkKCnBsYXlf",
          "Y2FyZHMYDyADKAsyBS5DYXJkIksKDU1hdGNoUmVzcG9uc2USDwoHcm9vbV9p",
          "ZBgBIAEoBRIQCghzZWxmX3BvcxgCIAEoBRIXCgZwbGF5ZXIYAyADKAsyBy5Q",
          "bGF5ZXIiXQoPR2FtZUVuZFJlc3BvbnNlEg4KBmlzX3dpbhgBIAEoCBINCgVt",
          "b25leRgCIAEoBRIRCglpc19zcHJpbmcYAyABKAgSGAoHcGxheWVycxgEIAMo",
          "CzIHLlBsYXllciplCglSb29tU3RhdGUSCAoETm9uZRAAEgwKCE1hdGNoaW5n",
          "EAESDAoIQ2FsbExvcmQQAxIMCghHcmFiTG9yZBAEEgkKBVJhaXNlEAUSDAoI",
          "UGxheUhhbmQQBhILCgdHYW1lRW5kEAdiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::UserReflection.Descriptor, global::CardReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RoomState), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Room), global::Room.Parser, new[]{ "RoomId", "Players", "RoomState", "CardList", "HoleCards", "CallPos", "CallTimes", "BaseScore", "Multiple", "GrabTimes", "CurLordPos", "RaiseTimes", "PendPos", "MonsterPos", "PlayCards" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::MatchResponse), global::MatchResponse.Parser, new[]{ "RoomId", "SelfPos", "Player" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::GameEndResponse), global::GameEndResponse.Parser, new[]{ "IsWin", "Money", "IsSpring", "Players" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
/// <summary>
/// 房间状态
/// </summary>
public enum RoomState {
  [pbr::OriginalName("None")] None = 0,
  /// <summary>
  /// 匹配
  /// </summary>
  [pbr::OriginalName("Matching")] Matching = 1,
  /// <summary>
  /// 叫地主
  /// </summary>
  [pbr::OriginalName("CallLord")] CallLord = 3,
  /// <summary>
  /// 抢地主
  /// </summary>
  [pbr::OriginalName("GrabLord")] GrabLord = 4,
  /// <summary>
  /// 加倍
  /// </summary>
  [pbr::OriginalName("Raise")] Raise = 5,
  /// <summary>
  /// 出牌
  /// </summary>
  [pbr::OriginalName("PlayHand")] PlayHand = 6,
  /// <summary>
  /// 游戏结束
  /// </summary>
  [pbr::OriginalName("GameEnd")] GameEnd = 7,
}

#endregion

#region Messages
/// <summary>
/// 房间
/// </summary>
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class Room : pb::IMessage<Room>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Room> _parser = new pb::MessageParser<Room>(() => new Room());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Room> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RoomReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Room() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Room(Room other) : this() {
    roomId_ = other.roomId_;
    players_ = other.players_.Clone();
    roomState_ = other.roomState_;
    cardList_ = other.cardList_.Clone();
    holeCards_ = other.holeCards_.Clone();
    callPos_ = other.callPos_;
    callTimes_ = other.callTimes_;
    baseScore_ = other.baseScore_;
    multiple_ = other.multiple_;
    grabTimes_ = other.grabTimes_;
    curLordPos_ = other.curLordPos_;
    raiseTimes_ = other.raiseTimes_;
    pendPos_ = other.pendPos_;
    monsterPos_ = other.monsterPos_;
    playCards_ = other.playCards_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Room Clone() {
    return new Room(this);
  }

  /// <summary>Field number for the "room_id" field.</summary>
  public const int RoomIdFieldNumber = 1;
  private int roomId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int RoomId {
    get { return roomId_; }
    set {
      roomId_ = value;
    }
  }

  /// <summary>Field number for the "players" field.</summary>
  public const int PlayersFieldNumber = 2;
  private static readonly pb::FieldCodec<global::Player> _repeated_players_codec
      = pb::FieldCodec.ForMessage(18, global::Player.Parser);
  private readonly pbc::RepeatedField<global::Player> players_ = new pbc::RepeatedField<global::Player>();
  /// <summary>
  /// 玩家列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Player> Players {
    get { return players_; }
  }

  /// <summary>Field number for the "room_state" field.</summary>
  public const int RoomStateFieldNumber = 3;
  private global::RoomState roomState_ = global::RoomState.None;
  /// <summary>
  /// 房间状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RoomState RoomState {
    get { return roomState_; }
    set {
      roomState_ = value;
    }
  }

  /// <summary>Field number for the "card_list" field.</summary>
  public const int CardListFieldNumber = 4;
  private static readonly pb::FieldCodec<global::Card> _repeated_cardList_codec
      = pb::FieldCodec.ForMessage(34, global::Card.Parser);
  private readonly pbc::RepeatedField<global::Card> cardList_ = new pbc::RepeatedField<global::Card>();
  /// <summary>
  /// 54张牌
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Card> CardList {
    get { return cardList_; }
  }

  /// <summary>Field number for the "hole_cards" field.</summary>
  public const int HoleCardsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::Card> _repeated_holeCards_codec
      = pb::FieldCodec.ForMessage(42, global::Card.Parser);
  private readonly pbc::RepeatedField<global::Card> holeCards_ = new pbc::RepeatedField<global::Card>();
  /// <summary>
  /// 底牌
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Card> HoleCards {
    get { return holeCards_; }
  }

  /// <summary>Field number for the "call_pos" field.</summary>
  public const int CallPosFieldNumber = 6;
  private int callPos_;
  /// <summary>
  /// 叫地主玩家的坐位索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CallPos {
    get { return callPos_; }
    set {
      callPos_ = value;
    }
  }

  /// <summary>Field number for the "call_times" field.</summary>
  public const int CallTimesFieldNumber = 7;
  private int callTimes_;
  /// <summary>
  /// 请求叫地主的次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CallTimes {
    get { return callTimes_; }
    set {
      callTimes_ = value;
    }
  }

  /// <summary>Field number for the "base_score" field.</summary>
  public const int BaseScoreFieldNumber = 8;
  private int baseScore_;
  /// <summary>
  /// 底分
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int BaseScore {
    get { return baseScore_; }
    set {
      baseScore_ = value;
    }
  }

  /// <summary>Field number for the "multiple" field.</summary>
  public const int MultipleFieldNumber = 9;
  private int multiple_;
  /// <summary>
  /// 倍数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Multiple {
    get { return multiple_; }
    set {
      multiple_ = value;
    }
  }

  /// <summary>Field number for the "grab_times" field.</summary>
  public const int GrabTimesFieldNumber = 10;
  private int grabTimes_;
  /// <summary>
  /// 抢地主的次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int GrabTimes {
    get { return grabTimes_; }
    set {
      grabTimes_ = value;
    }
  }

  /// <summary>Field number for the "cur_lord_pos" field.</summary>
  public const int CurLordPosFieldNumber = 11;
  private int curLordPos_;
  /// <summary>
  /// 地主的位置索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CurLordPos {
    get { return curLordPos_; }
    set {
      curLordPos_ = value;
    }
  }

  /// <summary>Field number for the "raise_times" field.</summary>
  public const int RaiseTimesFieldNumber = 12;
  private int raiseTimes_;
  /// <summary>
  /// 加倍的次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int RaiseTimes {
    get { return raiseTimes_; }
    set {
      raiseTimes_ = value;
    }
  }

  /// <summary>Field number for the "pend_pos" field.</summary>
  public const int PendPosFieldNumber = 13;
  private int pendPos_;
  /// <summary>
  /// 当前出牌人的坐位
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PendPos {
    get { return pendPos_; }
    set {
      pendPos_ = value;
    }
  }

  /// <summary>Field number for the "monster_pos" field.</summary>
  public const int MonsterPosFieldNumber = 14;
  private int monsterPos_;
  /// <summary>
  /// 本轮出牌中，打出的牌为最大的玩家的坐位
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MonsterPos {
    get { return monsterPos_; }
    set {
      monsterPos_ = value;
    }
  }

  /// <summary>Field number for the "play_cards" field.</summary>
  public const int PlayCardsFieldNumber = 15;
  private static readonly pb::FieldCodec<global::Card> _repeated_playCards_codec
      = pb::FieldCodec.ForMessage(122, global::Card.Parser);
  private readonly pbc::RepeatedField<global::Card> playCards_ = new pbc::RepeatedField<global::Card>();
  /// <summary>
  /// 当前打出的牌
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Card> PlayCards {
    get { return playCards_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Room);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Room other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoomId != other.RoomId) return false;
    if(!players_.Equals(other.players_)) return false;
    if (RoomState != other.RoomState) return false;
    if(!cardList_.Equals(other.cardList_)) return false;
    if(!holeCards_.Equals(other.holeCards_)) return false;
    if (CallPos != other.CallPos) return false;
    if (CallTimes != other.CallTimes) return false;
    if (BaseScore != other.BaseScore) return false;
    if (Multiple != other.Multiple) return false;
    if (GrabTimes != other.GrabTimes) return false;
    if (CurLordPos != other.CurLordPos) return false;
    if (RaiseTimes != other.RaiseTimes) return false;
    if (PendPos != other.PendPos) return false;
    if (MonsterPos != other.MonsterPos) return false;
    if(!playCards_.Equals(other.playCards_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (RoomId != 0) hash ^= RoomId.GetHashCode();
    hash ^= players_.GetHashCode();
    if (RoomState != global::RoomState.None) hash ^= RoomState.GetHashCode();
    hash ^= cardList_.GetHashCode();
    hash ^= holeCards_.GetHashCode();
    if (CallPos != 0) hash ^= CallPos.GetHashCode();
    if (CallTimes != 0) hash ^= CallTimes.GetHashCode();
    if (BaseScore != 0) hash ^= BaseScore.GetHashCode();
    if (Multiple != 0) hash ^= Multiple.GetHashCode();
    if (GrabTimes != 0) hash ^= GrabTimes.GetHashCode();
    if (CurLordPos != 0) hash ^= CurLordPos.GetHashCode();
    if (RaiseTimes != 0) hash ^= RaiseTimes.GetHashCode();
    if (PendPos != 0) hash ^= PendPos.GetHashCode();
    if (MonsterPos != 0) hash ^= MonsterPos.GetHashCode();
    hash ^= playCards_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RoomId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RoomId);
    }
    players_.WriteTo(output, _repeated_players_codec);
    if (RoomState != global::RoomState.None) {
      output.WriteRawTag(24);
      output.WriteEnum((int) RoomState);
    }
    cardList_.WriteTo(output, _repeated_cardList_codec);
    holeCards_.WriteTo(output, _repeated_holeCards_codec);
    if (CallPos != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(CallPos);
    }
    if (CallTimes != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(CallTimes);
    }
    if (BaseScore != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(BaseScore);
    }
    if (Multiple != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(Multiple);
    }
    if (GrabTimes != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(GrabTimes);
    }
    if (CurLordPos != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(CurLordPos);
    }
    if (RaiseTimes != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(RaiseTimes);
    }
    if (PendPos != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(PendPos);
    }
    if (MonsterPos != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(MonsterPos);
    }
    playCards_.WriteTo(output, _repeated_playCards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RoomId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RoomId);
    }
    players_.WriteTo(ref output, _repeated_players_codec);
    if (RoomState != global::RoomState.None) {
      output.WriteRawTag(24);
      output.WriteEnum((int) RoomState);
    }
    cardList_.WriteTo(ref output, _repeated_cardList_codec);
    holeCards_.WriteTo(ref output, _repeated_holeCards_codec);
    if (CallPos != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(CallPos);
    }
    if (CallTimes != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(CallTimes);
    }
    if (BaseScore != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(BaseScore);
    }
    if (Multiple != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(Multiple);
    }
    if (GrabTimes != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(GrabTimes);
    }
    if (CurLordPos != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(CurLordPos);
    }
    if (RaiseTimes != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(RaiseTimes);
    }
    if (PendPos != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(PendPos);
    }
    if (MonsterPos != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(MonsterPos);
    }
    playCards_.WriteTo(ref output, _repeated_playCards_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (RoomId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
    }
    size += players_.CalculateSize(_repeated_players_codec);
    if (RoomState != global::RoomState.None) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomState);
    }
    size += cardList_.CalculateSize(_repeated_cardList_codec);
    size += holeCards_.CalculateSize(_repeated_holeCards_codec);
    if (CallPos != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CallPos);
    }
    if (CallTimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CallTimes);
    }
    if (BaseScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseScore);
    }
    if (Multiple != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Multiple);
    }
    if (GrabTimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(GrabTimes);
    }
    if (CurLordPos != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurLordPos);
    }
    if (RaiseTimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RaiseTimes);
    }
    if (PendPos != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PendPos);
    }
    if (MonsterPos != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterPos);
    }
    size += playCards_.CalculateSize(_repeated_playCards_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Room other) {
    if (other == null) {
      return;
    }
    if (other.RoomId != 0) {
      RoomId = other.RoomId;
    }
    players_.Add(other.players_);
    if (other.RoomState != global::RoomState.None) {
      RoomState = other.RoomState;
    }
    cardList_.Add(other.cardList_);
    holeCards_.Add(other.holeCards_);
    if (other.CallPos != 0) {
      CallPos = other.CallPos;
    }
    if (other.CallTimes != 0) {
      CallTimes = other.CallTimes;
    }
    if (other.BaseScore != 0) {
      BaseScore = other.BaseScore;
    }
    if (other.Multiple != 0) {
      Multiple = other.Multiple;
    }
    if (other.GrabTimes != 0) {
      GrabTimes = other.GrabTimes;
    }
    if (other.CurLordPos != 0) {
      CurLordPos = other.CurLordPos;
    }
    if (other.RaiseTimes != 0) {
      RaiseTimes = other.RaiseTimes;
    }
    if (other.PendPos != 0) {
      PendPos = other.PendPos;
    }
    if (other.MonsterPos != 0) {
      MonsterPos = other.MonsterPos;
    }
    playCards_.Add(other.playCards_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RoomId = input.ReadInt32();
          break;
        }
        case 18: {
          players_.AddEntriesFrom(input, _repeated_players_codec);
          break;
        }
        case 24: {
          RoomState = (global::RoomState) input.ReadEnum();
          break;
        }
        case 34: {
          cardList_.AddEntriesFrom(input, _repeated_cardList_codec);
          break;
        }
        case 42: {
          holeCards_.AddEntriesFrom(input, _repeated_holeCards_codec);
          break;
        }
        case 48: {
          CallPos = input.ReadInt32();
          break;
        }
        case 56: {
          CallTimes = input.ReadInt32();
          break;
        }
        case 64: {
          BaseScore = input.ReadInt32();
          break;
        }
        case 72: {
          Multiple = input.ReadInt32();
          break;
        }
        case 80: {
          GrabTimes = input.ReadInt32();
          break;
        }
        case 88: {
          CurLordPos = input.ReadInt32();
          break;
        }
        case 96: {
          RaiseTimes = input.ReadInt32();
          break;
        }
        case 104: {
          PendPos = input.ReadInt32();
          break;
        }
        case 112: {
          MonsterPos = input.ReadInt32();
          break;
        }
        case 122: {
          playCards_.AddEntriesFrom(input, _repeated_playCards_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RoomId = input.ReadInt32();
          break;
        }
        case 18: {
          players_.AddEntriesFrom(ref input, _repeated_players_codec);
          break;
        }
        case 24: {
          RoomState = (global::RoomState) input.ReadEnum();
          break;
        }
        case 34: {
          cardList_.AddEntriesFrom(ref input, _repeated_cardList_codec);
          break;
        }
        case 42: {
          holeCards_.AddEntriesFrom(ref input, _repeated_holeCards_codec);
          break;
        }
        case 48: {
          CallPos = input.ReadInt32();
          break;
        }
        case 56: {
          CallTimes = input.ReadInt32();
          break;
        }
        case 64: {
          BaseScore = input.ReadInt32();
          break;
        }
        case 72: {
          Multiple = input.ReadInt32();
          break;
        }
        case 80: {
          GrabTimes = input.ReadInt32();
          break;
        }
        case 88: {
          CurLordPos = input.ReadInt32();
          break;
        }
        case 96: {
          RaiseTimes = input.ReadInt32();
          break;
        }
        case 104: {
          PendPos = input.ReadInt32();
          break;
        }
        case 112: {
          MonsterPos = input.ReadInt32();
          break;
        }
        case 122: {
          playCards_.AddEntriesFrom(ref input, _repeated_playCards_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// 匹配成功的响应
/// </summary>
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class MatchResponse : pb::IMessage<MatchResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<MatchResponse> _parser = new pb::MessageParser<MatchResponse>(() => new MatchResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<MatchResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RoomReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MatchResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MatchResponse(MatchResponse other) : this() {
    roomId_ = other.roomId_;
    selfPos_ = other.selfPos_;
    player_ = other.player_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public MatchResponse Clone() {
    return new MatchResponse(this);
  }

  /// <summary>Field number for the "room_id" field.</summary>
  public const int RoomIdFieldNumber = 1;
  private int roomId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int RoomId {
    get { return roomId_; }
    set {
      roomId_ = value;
    }
  }

  /// <summary>Field number for the "self_pos" field.</summary>
  public const int SelfPosFieldNumber = 2;
  private int selfPos_;
  /// <summary>
  /// 自己坐位的索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SelfPos {
    get { return selfPos_; }
    set {
      selfPos_ = value;
    }
  }

  /// <summary>Field number for the "player" field.</summary>
  public const int PlayerFieldNumber = 3;
  private static readonly pb::FieldCodec<global::Player> _repeated_player_codec
      = pb::FieldCodec.ForMessage(26, global::Player.Parser);
  private readonly pbc::RepeatedField<global::Player> player_ = new pbc::RepeatedField<global::Player>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Player> Player {
    get { return player_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as MatchResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(MatchResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoomId != other.RoomId) return false;
    if (SelfPos != other.SelfPos) return false;
    if(!player_.Equals(other.player_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (RoomId != 0) hash ^= RoomId.GetHashCode();
    if (SelfPos != 0) hash ^= SelfPos.GetHashCode();
    hash ^= player_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (RoomId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RoomId);
    }
    if (SelfPos != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SelfPos);
    }
    player_.WriteTo(output, _repeated_player_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (RoomId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RoomId);
    }
    if (SelfPos != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(SelfPos);
    }
    player_.WriteTo(ref output, _repeated_player_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (RoomId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
    }
    if (SelfPos != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelfPos);
    }
    size += player_.CalculateSize(_repeated_player_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(MatchResponse other) {
    if (other == null) {
      return;
    }
    if (other.RoomId != 0) {
      RoomId = other.RoomId;
    }
    if (other.SelfPos != 0) {
      SelfPos = other.SelfPos;
    }
    player_.Add(other.player_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RoomId = input.ReadInt32();
          break;
        }
        case 16: {
          SelfPos = input.ReadInt32();
          break;
        }
        case 26: {
          player_.AddEntriesFrom(input, _repeated_player_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          RoomId = input.ReadInt32();
          break;
        }
        case 16: {
          SelfPos = input.ReadInt32();
          break;
        }
        case 26: {
          player_.AddEntriesFrom(ref input, _repeated_player_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// 游戏结束的响应
/// </summary>
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class GameEndResponse : pb::IMessage<GameEndResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GameEndResponse> _parser = new pb::MessageParser<GameEndResponse>(() => new GameEndResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GameEndResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RoomReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameEndResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameEndResponse(GameEndResponse other) : this() {
    isWin_ = other.isWin_;
    money_ = other.money_;
    isSpring_ = other.isSpring_;
    players_ = other.players_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameEndResponse Clone() {
    return new GameEndResponse(this);
  }

  /// <summary>Field number for the "is_win" field.</summary>
  public const int IsWinFieldNumber = 1;
  private bool isWin_;
  /// <summary>
  /// 是否赢了
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsWin {
    get { return isWin_; }
    set {
      isWin_ = value;
    }
  }

  /// <summary>Field number for the "money" field.</summary>
  public const int MoneyFieldNumber = 2;
  private int money_;
  /// <summary>
  /// 加或减了多少豆子
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Money {
    get { return money_; }
    set {
      money_ = value;
    }
  }

  /// <summary>Field number for the "is_spring" field.</summary>
  public const int IsSpringFieldNumber = 3;
  private bool isSpring_;
  /// <summary>
  /// 是否春天
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsSpring {
    get { return isSpring_; }
    set {
      isSpring_ = value;
    }
  }

  /// <summary>Field number for the "players" field.</summary>
  public const int PlayersFieldNumber = 4;
  private static readonly pb::FieldCodec<global::Player> _repeated_players_codec
      = pb::FieldCodec.ForMessage(34, global::Player.Parser);
  private readonly pbc::RepeatedField<global::Player> players_ = new pbc::RepeatedField<global::Player>();
  /// <summary>
  /// 玩家列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Player> Players {
    get { return players_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GameEndResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GameEndResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsWin != other.IsWin) return false;
    if (Money != other.Money) return false;
    if (IsSpring != other.IsSpring) return false;
    if(!players_.Equals(other.players_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (IsWin != false) hash ^= IsWin.GetHashCode();
    if (Money != 0) hash ^= Money.GetHashCode();
    if (IsSpring != false) hash ^= IsSpring.GetHashCode();
    hash ^= players_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (IsWin != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsWin);
    }
    if (Money != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Money);
    }
    if (IsSpring != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsSpring);
    }
    players_.WriteTo(output, _repeated_players_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (IsWin != false) {
      output.WriteRawTag(8);
      output.WriteBool(IsWin);
    }
    if (Money != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Money);
    }
    if (IsSpring != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsSpring);
    }
    players_.WriteTo(ref output, _repeated_players_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (IsWin != false) {
      size += 1 + 1;
    }
    if (Money != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Money);
    }
    if (IsSpring != false) {
      size += 1 + 1;
    }
    size += players_.CalculateSize(_repeated_players_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GameEndResponse other) {
    if (other == null) {
      return;
    }
    if (other.IsWin != false) {
      IsWin = other.IsWin;
    }
    if (other.Money != 0) {
      Money = other.Money;
    }
    if (other.IsSpring != false) {
      IsSpring = other.IsSpring;
    }
    players_.Add(other.players_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsWin = input.ReadBool();
          break;
        }
        case 16: {
          Money = input.ReadInt32();
          break;
        }
        case 24: {
          IsSpring = input.ReadBool();
          break;
        }
        case 34: {
          players_.AddEntriesFrom(input, _repeated_players_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          IsWin = input.ReadBool();
          break;
        }
        case 16: {
          Money = input.ReadInt32();
          break;
        }
        case 24: {
          IsSpring = input.ReadBool();
          break;
        }
        case 34: {
          players_.AddEntriesFrom(ref input, _repeated_players_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
